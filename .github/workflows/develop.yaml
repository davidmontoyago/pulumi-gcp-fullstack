name: Develop

on:
  push:
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Build and test
        run: make test

      - name: Report test coverage
        uses: ncruces/go-coverage-report@v0
        with:
          coverage-file: coverage.out
          chart: true
          amend: true
        continue-on-error: true
        if: |
          github.event_name == 'push'

  lint:
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: go.sum

      - name: Lint Go code
        run: make lint

  scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    permissions:
      contents: write # for sbom-action artifact uploads
      actions: read # to find workflow artifacts when attaching release assets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate SBOM
        uses: anchore/sbom-action@v0.20.4
        with:
          path: .
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Scan SBOM with Grype
        id: scan
        uses: anchore/scan-action@v6
        with:
          sbom: sbom.spdx.json
          fail-build: true
          severity-cutoff: medium
          output-format: table

  release:
    runs-on: ubuntu-latest
    needs: scan
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="$tag" \
              --generate-notes
